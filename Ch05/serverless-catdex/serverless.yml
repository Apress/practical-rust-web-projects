# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: serverless-catdex
provider:
  name: aws
  runtime: rust
  memorySize: 128
# you can overwrite defaults here
#  stage: dev
  region: eu-central-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"
  iamRoleStatements:
      - Effect: "Allow"
        Action:
            - "dynamodb:Scan"
            - "dynamodb:PutItem"
        Resource:
          Fn::Join:
            - ""
            - - "arn:aws:dynamodb:*:*:table/"
              - "Ref": "CatdexTable"
      - Effect: "Allow"
        Action:
            - "s3:PutObject"
            - "s3:PutObjectAcl"
        Resource:
          Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - "Ref": "FrontendBucket"
              - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  individually: true

plugins:
  - serverless-rust
  - serverless-finch

functions:
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

  cats:
    handler: cats
    events:
      - http:
          path: /cats
          method: get
          cors: true
  cat_post:
    handler: cat_post
    events:
      - http:
          path: /cat
          method: post
          cors: true

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

resources:
  Resources:
    CatdexTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: shing_catdex
        AttributeDefinitions:
            - AttributeName: name
              AttributeType: S
        KeySchema:
            - AttributeName: name
              KeyType: HASH
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
    FrontendBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: shing-catdex-frontend
        AccessControl: Private


custom:
  client:
    bucketName: shing-catdex-frontend
